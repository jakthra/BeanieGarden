//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "account")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uuid: Uuid,
    pub email: String,
    pub active: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::gardening_task::Entity")]
    GardeningTask,
    #[sea_orm(has_many = "super::growth::Entity")]
    Growth,
}

impl Related<super::gardening_task::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GardeningTask.def()
    }
}

impl Related<super::growth::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Growth.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
