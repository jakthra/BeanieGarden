//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "gbif_genus")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub key: i64,
    pub canonical_name: String,
    pub scientific_name: String,
    pub family: String,
    pub genus: String,
    pub rank: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::common_plant::Entity")]
    CommonPlant,
}

impl Related<super::common_plant::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CommonPlant.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
